#
## rsyslog.cf @SURFsara
#
bundle common rsyslog()
{
    vars:
        "exclude_list" slist => { ".svn", ".git" };

        "service_name" string => "rsyslog";
        "daemon_name" string => "rsyslogd";
        "restart" string => "$(paths.path[systemctl]) restart $(service_name)";

        "template_2_destination" data => parsejson('
                {
                    "z-surfsara.conf.mustache": "/etc/rsyslog.d/z-surfsara.conf"
                }
        ');

        "packages"  data  => parsejson('
                {
                    "install": {
                        "rsyslog" : ""
                    }
                }
            ');

}

bundle agent rsyslog_install()
{
    methods:
        "" usebundle => scl_service_packages("rsyslog", "@(rsyslog.packages)");
}

bundle agent rsyslog_config()
{
    classes:
        "rsyslog_restart" or => {
            "sara_etc_rsyslog_d_z_surfsara_conf"
        };

    methods:
        "" usebundle => scl_mustache_autorun("rsyslog");

    services:
        "$(rsyslog.service_name)"
            service_policy => "start";

    commands:
        "$(rsyslog.restart)"
            if => "rsyslog_restart";
}

bundle agent rsyslog_daemon_check()
{
    processes:
        "$(rsyslog.daemon_name)"
            comment => "Check if rsyslog is running",
            process_count => check_range("$(rsyslog.daemon_name)", "1", "1"),
            process_select => scl_select_parent_process("1");

    commands:
        "$(rsyslog.restart)"
            if => canonify("$(rsyslog.daemon_name)_out_of_range");
}

bundle agent rsyslog_autorun()
{
    meta:
        "tags" slist => { "service_rsyslog", "template_rsyslog" };

    methods:
        "" usebundle => rsyslog_install();
        "" usebundle => rsyslog_config();
        "" usebundle => rsyslog_daemon_check();
}

@if minimum_version(99.9)
# rsyslog.cf

Source: [rsyslog.cf](/services/rsyslog.cf)

This bundle is used to configure the rsyslog daemon. The following actions are protected by a class:
 * Accept external log from other hosts (RSYSLOG_ACCEPT_REMOTE_LOG)

The class can be set in the def.cf/json:
```
"rsyslog": {
    "classes": {
        "ACCEPT_REMOTE_LOG": "any"
    }
}
```

## Usage

The bundle can be run via:
 * `def.scl_services_enabled`
```
"vars": {
    "scl_services_enabled": [
        "...",
        "rsyslog",
        "..."
    ]
}
```

## def.cf/son

See [default.json](/templates/rsyslog/json/default.json) what the default values are and which variables can be overriden.
@endif
