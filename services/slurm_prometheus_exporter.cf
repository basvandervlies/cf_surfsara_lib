#
## slurm_prometheus_exporter @SURF
#
bundle common slurm_prometheus_exporter()
{
    vars:
        "exclude_list" slist => { ".svn", ".git" };

        "service_name" string => "slurm_prometheus_exporter";
        "daemon_name" string => "/opt/slurm_prometheus_exporter/slurm_prometheus_exporter";

        "template_2_destination" data => parsejson('
            {
                "slurm_prometheus_exporter.default.mustache": "/etc/default/slurm_prometheus_exporter"
            }
        ');
    systemd::
        "reload" string => "$(paths.path[systemctl]) reload $(service_name)";
        "restart" string => "$(paths.path[systemctl]) restart $(service_name)";

    !systemd::
        "reload" string => "/etc/init.d/$(service_name) reload";
        "restart" string => "/etc/init.d/$(service_name) restart";

}

bundle agent slurm_prometheus_exporter_install()
{
    files:
        "/opt/slurm_prometheus_exporter"
            comment => "Copy the binaries of slurm_prometheus_exporter",
            copy_from => scl_sync_no_perms_cp("cf_bundles_dir/prometheus_exporters/slurm_prometheus_exporter-$(scl.slurm_prometheus_exporter[version])", "hash"),
            depth_search =>  recurse_ignore("inf", "@(slurm_prometheus_exporter.exclude_list)" ),
            classes => results("namespace", "slurm_prometheus_exporter_updated");
}

bundle agent slurm_prometheus_exporter_config()
{
    services:
        "$(slurm_prometheus_exporter.service_name)"
            service_policy => "start";

    methods:
        any::
            "" usebundle => scl_mustache_autorun("slurm_prometheus_exporter");

    commands:
        systemd::
            "$(paths.path[systemctl]) daemon-reload"
                if => or(
                    canonify("scl$(slurm_prometheus_exporter.systemd_file)")
                );

        !systemd::
            "$(slurm_gpu_prometheus_exporter.restart)"
                if => or(
                    canonify("scl$(slurm_prometheus_exporter.systemd_file)")
                );
}

bundle agent slurm_prometheus_exporter_daemon_check()
{
    processes:
        "$(slurm_prometheus_exporter.daemon_name)"
            comment => "Check if GPU Prometheus exporter is running",
            process_count   => check_range("$(slurm_prometheus_exporter.daemon_name)", "1", "1"),
            process_select  => scl_select_parent_process("1");

    commands:
        "$(slurm_prometheus_exporter.restart)"
            if => canonify("$(slurm_prometheus_exporter.daemon_name)_out_of_range");
}

bundle agent slurm_prometheus_exporter_autorun()
{
    meta:
        "tags" slist => { "service_slurm_prometheus_exporter", "template_slurm_prometheus_exporter" };

    methods:
        "" usebundle => slurm_prometheus_exporter_install();
        "" usebundle => slurm_prometheus_exporter_config();
        "" usebundle => slurm_prometheus_exporter_daemon_check();
}
@if minimum_version(99.9)
# slurm_prometheus_exporter

**This bundle must be rewritten to the new standard**

Source: [slurm_prometheus_exporter.cf](/services/slurm_prometheus_exporter.cf)

This bundle will generate these/this file(s) from mustache templates:
 * /etc/default/slurm_prometheus_exporter

If one of the files is changed then the following ""class"" will be set:
 * scl_etc_default_slurm_prometheus_exporter

These templates are located in:
 * templates/slurm_prometheus_exporter
 * templates/slurm_prometheus_exporter/json

@endif
