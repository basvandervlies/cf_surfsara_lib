#
## singularity.cf @SURF
#
bundle common singularity
{
    vars:

        any::
            "config_dir" string => "/etc/singularity";
            "config_file" string => "$(config_dir)/singularity.conf";

            "template_2_destination" data => parsejson('
                    {
                        "singularity.mustache" : "$(config_file)",
                    }
                ');

        centos::
            "packages"  data  => parsejson('
                    {
                        "install": {
                            "singularity" : "latest"
                        }
                    }
                ');
        debian::
            "packages"  data  => parsejson('
                    {
                        "install": {
                            "singularity-container" : "latest"
                        }
                    }
                ');
}

bundle agent singularity_autorun
{
    meta:
            "tags" slist => { "service_singularity", "template_singularity" };

    methods:
        debian|centos::
            "" usebundle => scl_data_autorun("singularity");
            "" usebundle => singularity_install;
            "" usebundle => singularity_config;

    reports:
        !(debian|centos)::
            "$(this.bundle): Only debian|centos support for now";
}

bundle agent singularity_install()
{
    methods:
        "" usebundle => scl_service_packages("singularity", "@(singularity.packages)");
}

bundle agent singularity_config()
{
    vars:
        any::
            "singularity_config_file_class" string => canonify("scl$(singularity.config_file)");

    methods:
        any::
            "" usebundle => scl_mustache_autorun("singularity");

    reports:
        any::
            "$(singularity.config_file) config file has been updated"
                if => "$(singularity_config_file_class)";
}

@if minimum_version(99.9)
# Singularity

Source: [singularity.cf](/services/singularity.cf)

This bundle install singularity software on a node.

This bundle will generate this file from the mustache template:
 * /etc/singularity/singularity.conf

f one of the files is changed then the followong ''class'' will be set:
 * scl_etc_singularity_singularity._conf

These files will be generated with the aid of mustache templates with json data.
the templates are located in:
 * templates/singularity/
 * templates/singularity/json

## Usage

The bundle can be run via:
 * `def.scl_services_enabled`
```json
"vars": {
    "scl_services_enabled": [
            "...",
            "singularity",
            "..."
    ]
}
```

The bundle will always read the [default.json](/templates/singularity/json/default.json) file
and extra json file(s) can be specified via:
 * def.cf
```
vars:
    any::
        "singularity_json_files" slist => { "disable_overlay.json" };
```

The variable must be ''singularity_json_files'' and with this setup 1 extra json file will be  merged.

### DEBUG

if you want to debug this bundle set the `DEBUG_singularity` class, eg:
 * `-DDEBUG_singularity`

## def.cf/json

See [default.json](/templates/singularity/json/default.json) what the default values are and
which variables can be overriden.

Here are some examples how to use it:
 * specify singularity configuration in def.cf:
```
vars:
    "singularity_json_files" slist => { "disable_overlay.json" };
```

 * Set/Override variables in *def.json*:
```json
"singularity" : {
    "json_files": [ "test_server.json" ],
    "enable_overlay": "no"
}
```

 * override setting in def.cf
```
vars:
    "singularity" data => parsejson( '{ "enable_overlay":  "no"  }' );
```
@endif
