body file control {
    inputs => { @{scl_inputs.files}, };
}

bundle common scl_inputs {
    meta:
        'tags' slist => { 'autorun' };

    vars:
        "files" slist => { "${sys.local_libdir}/scl/stdlib.cf" };

}

bundle agent scl_autorun {
    meta:
        "tags" slist => { "autorun" };

    classes:
        "template_dir_exists" expression => isdir("$(def.dir_templates)/scl"),
            comment => "If exists then update the dir";

    vars:
        policy_server.template_dir_exists::
            "template_pattern" slist => { ".*\.mustache", "default\.json" };
        policy_server.!template_dir_exists::
            "template_pattern" slist => { ".*" };

    files:
        policy_server::
            "$(def.dir_templates)/scl"
                comment  => "Copy the the scl template dir to the cfengine template dir (shortcut: templates)",
                copy_from => local_dcp("$(def.dir_masterfiles)/lib/scl/.git/templates"),
                depth_search => recurse("inf"),
                file_select => by_name("@(template_pattern)"),
                move_obstructions => "true";

    methods:
        any::
            "" usebundle => scl_inventory_modules(),
                comment => "Which inventory module must be run, controlled via 'def.scl_inventory_modules'";
            "" usebundle => scl_services_autorun(),
                comment => "Which service bundle(s) must be run, controlled via 'def.scl_services_enabled'";

    reports:
        verbose_mode::
            "$(this.bundle): SCL lib loaded with node template dir: $(def.node_template_dir)";
}
